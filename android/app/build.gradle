plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    compileSdk 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    defaultConfig {
        applicationId "app.revanced.manager.flutter"
        minSdk 26
        targetSdk 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
            resValue "string", "app_name", "ReVanced Manager"
            signingConfig signingConfigs.debug
            ndk {
                abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
            }
        }
        debug {
            shrinkResources false
            minifyEnabled false
            resValue "string", "app_name", "ReVanced Manager Debug"
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            ndk {
                abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
            }
        }
        profile {
            shrinkResources false
            minifyEnabled false
            resValue "string", "app_name", "ReVanced Manager Profile"
            applicationIdSuffix ".profile"
            signingConfig signingConfigs.debug
            ndk {
                abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
            }
        }
    }
    packagingOptions {
        jniLibs {
            useLegacyPackaging true
            excludes += ['/prebuilt/**']
        }
        resources {
            excludes += ['/prebuilt/**']
        }
    }

    namespace 'app.revanced.manager.flutter'
}

kotlin {
    jvmToolchain(17)
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // ReVanced
    implementation "app.revanced:revanced-patcher:19.1.0"

    // Signing & aligning
    implementation("org.bouncycastle:bcpkix-jdk15on:1.70")
    implementation("com.android.tools.build:apksig:7.2.2")
}
